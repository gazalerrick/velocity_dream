#!/sbin/sh

. "$env"

if grep -qi Sac23 /system/build.prop; then
	print "Sac23 ROM detected, forcing permissive SELinux"
	exit 0
fi

choose() {
	while true; do
		event="$(timeout -t 5 /system/bin/getevent -lc 1 2>&1)"
		if [ $? -eq 143 ]; then
			return 1
		fi

		echo "$event" | /system/bin/grep VOLUME | /system/bin/grep " DOWN" > "$tmp/events"
		if (`cat $tmp/events 2>/dev/null | /system/bin/grep VOLUME >/dev/null`); then
			break
		fi
	done

	if (`cat $tmp/events 2>/dev/null | /system/bin/grep VOLUMEUP >/dev/null`); then
		return 0
	else
		return 1
	fi
}

enforce=0
first_time=1

# clean up old file
rm -f /sdcard/.velocity_settings

if [ -f /sdcard/VelocityKernel.prop ]; then
	grep -q "selinux.enforce=1" /sdcard/VelocityKernel.prop
	enforce=$?
	first_time=0
else
	print "Please choose a SELinux mode:"
	raw_iprint "Vol+ = Enforcing (secure, buggy)"
	raw_iprint "Vol- = Permissive (recommended, default in 5 seconds)"

	choose
	enforce=$?
fi

if [ $enforce = 0 ]; then # enforcing
	replace_line "$ramdisk/init.early.sh" "enforce=0" "enforce=1"
	if [ $first_time = 1 ]; then
		echo 'selinux.enforce=1' > /sdcard/VelocityKernel.prop
		print "Setting to enforcing; choice saved to internal storage."
	else
		print "Setting SELinux to enforcing"
	fi
else # permissive
	if [ $first_time = 1 ]; then
		echo 'selinux.enforce=0' > /sdcard/VelocityKernel.prop
		print "Setting to permissive; choice saved to internal storage."
	else
		print "Setting SELinux to permissive"
	fi
fi

chown media_rw:media_rw /sdcard/VelocityKernel.prop

exit 0
